// ООП программирование
// Объекты
// Зачем нужны объекты? 
// В отличии от программирования с помощью процедуры функций, когда каждая функция может
// быть вызвана любым пользователем программы, не привязана ни к чему в совем контексте
// Объект - это объединение свойств и каких-либо действий над определенной моделью
// По сути объект - собирательные возможности обработкаи каких-либо данных 

// Пример объектов в JS

const hotel = {
  "name": "U doma",
  "stars": 3,
  "adv": function () {
    console.log(this.name + " best hotel. Stars: " + this.stars)
  },
  hi: "hello",
  "how much": 500,
  "und": undefined
};
let b = "stars"
console.log(hotel);
console.log(hotel[b]);
hotel.adv();
// Объект - сущность, позволяющая хранить информацию в виде свойств и в виде методов
// Свойства - пара, которая предстваляет собой ключ или индекс и его значение. 
// Индекс(ключ) необязательно должен что-либо содержать, он может быть пустым
// В качестве значения может выступать любой тип данных
// Метод - пара - ключ и функция, которая позволяет выполнять определенные наборы действий
// Поэтому ключ, который содержит функцию называется методом
// Способы вызова свойств: 
// 1. через точку, например hotel.name
// 2.Через квадратные скобки hotel['name']
// 3. Если ключ состоит из нескольких слов, то вызвать через точку не 
// получится, но получится через квадратные скобки
// 4. Можно записать так: let b = "name" и тогде можно будет обратиться так: hotel[b];

// Если мы не знаем есть ли внутри объекта какой-то элемент и даже если он 
// равен undefined мы хотим получить ответ "да он есть" или "его нет"
// можно воспользоваться двумя способами: 
// 1.
let yes = 'und' in hotel;
console.log(yes)
// in - специальный оператор, который проверяет наличие свойства внутри объекта
// выражение выше вернет true или false
// 2.
let yes1 = hotel.hasOwnProperty('und');
console.log(yes1);

// Для удаления свойства необходимо написать: 
delete hotel.hi;
console.log(hotel)



